const e=async e=>{const n=await navigator.gpu.requestAdapter(),t=await n.requestDevice(),r="bgra8unorm",o=e.getContext("gpupresent").configureSwapChain({device:t,format:r}),a=t.createRenderPipeline({vertex:{module:t.createShaderModule({code:"\nconst pos: array<vec2<f32>, 3> = array<vec2<f32>, 3>(\n  vec2<f32>(0.0, 0.5),\n  vec2<f32>(-0.5, -0.5),\n  vec2<f32>(0.5, -0.5)\n);\n\n[[builtin(position)]] var<out> Position: vec4<f32>;\n[[builtin(vertex_index)]] var<in> VertexIndex: i32;\n\n[[stage(vertex)]]\nfn main() -> void {\n  Position = vec4<f32>(pos[VertexIndex], 0.0, 1.0);\n  return;\n}"}),entryPoint:"main"},fragment:{module:t.createShaderModule({code:"\n[[location(0)]] var<out> outColor: vec4<f32>;\n\n[[stage(fragment)]]\nfn main() -> void {\n  outColor = vec4<f32>(1.0, 0.2, 0.4, 1.0);\n  return;\n}\n"}),entryPoint:"main",targets:[{format:r}]},primitive:{topology:"triangle-list"}}),i=t.createCommandEncoder(),c={colorAttachments:[{view:o.getCurrentTexture().createView(),loadValue:{r:0,g:0,b:0,a:1}}]},s=i.beginRenderPass(c);s.setPipeline(a),s.draw(3,1,0,0),s.endPass(),t.queue.submit([i.finish()])},n="\n这是案例01，三角形的介绍文字。\nTODO\n",t=()=>{console.log("hello")};export{n as descText,e as init,t as test};
